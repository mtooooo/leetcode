class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        for i in range(9):
            for j in range(9):
                if board[i][j] != ".":
                    for k in range(9):
                        if board[i][j] == board[k][j]:
                            if k > i:
                                print(0)
                                return False

                        if board[i][j] == board[i][k]:
                            if k > j:
                                print(0)
                                return False

                        for l in range(9):
                            if i == k and j == l:
                                continue
                            yu_01 = [0, 1, 2]
                            yu_02 = [3, 4, 5]
                            yu_03 = [6, 7, 8]

                            for a in [yu_01, yu_02, yu_03]:
                                for b in [yu_01, yu_02, yu_03]:
                                    if i in a and k in a:
                                        if j in b and l in b:
                                            # if i <= k and j <= l:
                                            if board[i][j] == board[k][l]:
                                                print(i,j,k,l,0)
                                                return False

        print(1)
        return True


a = Solution()
board = [
    ["5", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"]
]

board1 = [
    ["8", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"]
]

board2 = [[".", ".", ".", ".", "5", ".", ".", "1", "."],
          [".", "4", ".", "3", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", "3", ".", ".", "1"],
          ["8", ".", ".", ".", ".", ".", ".", "2", "."],
          [".", ".", "2", ".", "7", ".", ".", ".", "."],
          [".", "1", "5", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", "2", ".", ".", "."],
          [".", "2", ".", "9", ".", ".", ".", ".", "."],
          [".", ".", "4", ".", ".", ".", ".", ".", "."]]

board3 = [
          [".", ".", "5", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", "8", ".", ".", ".", "3", "."],
          [".", "5", ".", ".", "2", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", "9"],
          [".", ".", ".", ".", ".", ".", "4", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", "7"],
          [".", "1", ".", ".", ".", ".", ".", ".", "."],
          ["2", "4", ".", ".", ".", ".", "9", ".", "."]]

a.isValidSudoku(board=board3)
